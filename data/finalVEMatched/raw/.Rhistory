# load LME package
library('lme4')
library(nlme)
library('lmerTest')
library('partR2') # https://cran.r-project.org/web/packages/partR2/vignettes/Using_partR2.html
library(AICcmodavg)
library(MuMIn)
library(multilevel)
library('r2glmm')
library(tidyverse) #for all data wrangling
library(cowplot) #for manuscript ready figures
library(sjPlot) #for plotting lmer and glmer mods
library(sjmisc)
library(effects)
library(sjstats) #use for r2 functions
# Load data
setwd("/Users/prachimahableshwarkar/Documents/GW/Depth_MTurk/verbal_judgement_analysis/data/finalVEMatched/raw/")
df <- read.csv('raw_data.csv')
df$subjID <- factor(df$subjID)
df$duration <- factor(df$duration)
df$stimulus <- factor(df$stimulus)
zsdf <- read.csv('/Users/prachimahableshwarkar/Documents/GW/Depth_MTurk/spatial_perception_SUNRGBD/verbal_judgment/analysis/zscored_data.csv')
zsdf$subjID <- factor(zsdf$subjID)
zsdf$duration <- factor(zsdf$duration)
zsdf$stimulus <- factor(zsdf$stimulus)
sort(unique(df$duration))
mod1 <- lmer(depth_estimate ~ actual_depth + duration + actual_depth*duration + (1|subjID), data=df)
summary(mod1)
sjPlot::plot_model(mod1,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod1)
anova(mod1)
#####
mod2 <- lmer(zs_depth_estimate ~ actual_depth + duration + actual_depth*duration + (1|subjID), data=zsdf)
summary(mod2)
sjPlot::plot_model(mod2,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod2)
anova(mod2)
#####
mod3 <- lmer(zs_depth_estimate ~ zs_actual_depth + duration + zs_actual_depth*duration + (1|subjID), data=zsdf)
summary(mod3)
sjPlot::plot_model(mod3,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod3)
anova(mod3)
# Plotting code: https://lmudge13.github.io/sample_code/mixed_effects.html
#
# Use the effects package --> effect function. term= the fixed effect you want to get data on, mod= name of your model.
m1_effects <- effects::effect(term= "actual_depth", mod= m1)
# Plotting code: https://lmudge13.github.io/sample_code/mixed_effects.html
#
# Use the effects package --> effect function. term= the fixed effect you want to get data on, mod= name of your model.
m1_effects <- effects::effect(term= "actual_depth", mod= mod1)
summary(m1_effects) #output of what the values are
# Save the effects values as a df:
m1_effects_df <- as.data.frame(m1_effects)
#1
m1_plot <- ggplot() +
#2
geom_point(data=subset(df), aes(actual_depth, abs_s_residual)) +
#3
geom_point(data=m1_effects_df, aes(x=actual_depth, y=fit), color="blue") +
#4
geom_line(data=m1_effects_df, aes(x=actual_depth, y=fit), color="blue") +
#5
geom_ribbon(data= m1_effects_df, aes(x=actual_depth, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="actual_depth", y="depth_estimate")
m1_plot
#1
m1_plot <- ggplot() +
#2
geom_point(data=subset(df), aes(actual_depth, abs_s_residual)) +
#3
geom_point(data=m1_effects_df, aes(x=actual_depth, y=fit), color="blue") +
#4
geom_line(data=m1_effects_df, aes(x=actual_depth, y=fit), color="blue") +
#5
geom_ribbon(data= m1_effects_df, aes(x=actual_depth, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="actual_depth", y="depth_estimate")
m1_plot
#1
m1_plot <- ggplot() +
#2
geom_point(data=subset(df), aes(actual_depth, depth_estimate)) +
#3
geom_point(data=m1_effects_df, aes(x=actual_depth, y=fit), color="blue") +
#4
geom_line(data=m1_effects_df, aes(x=actual_depth, y=fit), color="blue") +
#5
geom_ribbon(data= m1_effects_df, aes(x=actual_depth, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="actual_depth", y="depth_estimate")
m1_plot
#####
mod1 <- lmer(depth_estimate ~ actual_depth + duration + actual_depth*duration + (1|subjID), data=df)
summary(mod1)
sjPlot::plot_model(mod1,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod1)
anova(mod1)
#####
mod2 <- lmer(zs_depth_estimate ~ actual_depth + duration + actual_depth*duration + (1|subjID), data=zsdf)
summary(mod2)
sjPlot::plot_model(mod2,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod2)
anova(mod2)
#####
mod3 <- lmer(zs_depth_estimate ~ zs_actual_depth + duration + zs_actual_depth*duration + (1|subjID), data=zsdf)
summary(mod3)
sjPlot::plot_model(mod3,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod3)
anova(mod3)
